{
  "botWelcome": "*Olá! Eu sou o Kowalski!*\nFui feito com carinho por uns nerds que gostam de programação!\n\n*Antes de usar, você precisa ler a política de privacidade (/privacy) para entender onde seus dados vão ao usar este bot.*\n\nAlém disso, você pode usar /help para ver os comandos do bot!\n\n*Agradecimento especial ao @givfnz2 pelas suas várias contribuições ao bot!*",
  "botHelp": "*Oi, eu sou o Kowalski, um bot simples feito do zero em Telegraf e Node.js por uns nerds que gostam de programação.*\n\nClique nos botões abaixo para ver quais comandos você pode usar!\n",
  "botPrivacy": "Acesse [este link](https://blog.lucmsilva.com/posts/lynx-privacy-policy) para ler a política de privacidade do bot.",
  "botAbout": "*Sobre o bot*\n\nKowalski foi feito originalmente por [Lucas Gabriel (lucmsilva)](https://github.com/lucmsilva651), agora sendo mantido por várias pessoas.\n\nA intenção do bot é trazer diversão para os seus grupos aqui no Telegram de uma maneira bem descontraida e simples. O bot também conta com alguns comandos bem úteis, que você consegue ver com o comando de ajuda (/help).\n\nVeja o código fonte: [Clique aqui para ir ao GitHub](https://github.com/abocn/TelegramBot)",
  "aboutBot": "Sobre o bot",
  "unKnown": "Desconhecido",
  "varYes": "Sim",
  "varNo": "Não",
  "varTo": "",
  "varIs": "está",
  "varWas": "estava",
  "varNone": "Nenhum",
  "varErr": "Algum erro inesperado ocorreu durante uma ação do bot. Por favor, reporte aos desenvolvedores.\n\n{error}",
  "invalidOption": "Ops! Opção inválida!",
  "kickingMyself": "*Já que você não precisa de mim, vou sair daqui.*",
  "kickingMyselfErr": "Erro ao sair do chat.",
  "noPermission": "Você não tem permissão para executar este comando.",
  "botAdminOnly": "Este comando é exclusivo para os administradores gerais do bot. Eu não posso revelar quem eles são, nem o que este comando faz.",
  "privateOnly": "Este comando deve ser usado apenas em chats privados, não em grupos.",
  "groupOnly": "Este comando deve ser usado apenas em grupos, não em chats privados.",
  "botNameChanged": "*Nome do bot alterado para* `{botName}`.",
  "botNameErr": "*Erro ao alterar o nome do bot:*\n`{tgErr}`",
  "botDescChanged": "*Descrição do bot alterada para* `{botDesc}`.",
  "botDescErr": "*Erro ao alterar a descrição do bot:*\n`{tgErr}`",
  "invalidId": "Por favor, insira um ID de usuário válido.",
  "banSuccess": "Usuário com ID `{userId}` foi banido.",
  "banErr": "Não foi possível banir o usuário. Verifique se o ID está correto e se o bot tem permissões de administrador.\n\n`{tgErr}`",
  "unBanSuccess": "Usuário com ID `{userId}` foi desbanido.",
  "unBanErr": "Não foi possível desbanir o usuário. Verifique se o ID está correto e se o bot tem permissões de administrador.\n\n`{tgErr}`",
  "isGay": "Sim, você é *gay*!",
  "isNtGay": "Ah, você não é gay!",
  "isFurry": "Sim, você é *furry*!",
  "isNtFurry": "Ah, você não é furry!",
  "randomNum": "*Número gerado (0-10):* `{number}`.",
  "userInfo": "*Informações do usuário*\n\n*Nome:* `{userName}`\n*Usuário:* `{userHandle}`\n*ID:* `{userId}`\n*Idioma:* `{userLang}`\n*Usuário Premium:* `{userPremium}`",
  "chatInfo": "*Informações do chat*\n\n*Nome:* `{chatName}`\n*ID do chat:* `{chatId}`\n*Identificador:* `{chatHandle}`\n*Tipo:* `{chatType}`\n*Membros:* `{chatMembersCount}`\n*É um fórum:* `{isForum}`",
  "funEmojiResult": "*Você lançou {emoji} e obteve *`{value}`*!*\nVocê não sabe o que isso significa? Nem eu!",
  "gifErr": "*Algo deu errado ao enviar o GIF. Tente novamente mais tarde.*\n\n{err}",
  "lastFmNoUser": "*Por favor, forneça um nome de usuário do Last.fm.*\nExemplo: `/setuser <username>`",
  "lastFmNoSet": "*Você ainda não definiu seu nome de usuário do Last.fm.*\nUse o comando /setuser para definir.\n\nExemplo: `/setuser <username>`",
  "lastFmNoRecent": "*Nenhuma faixa recente encontrada para o usuário do Last.fm* `{lastfmUser}`*.*",
  "lastFmUserSet": "*Seu nome de usuário do Last.fm foi definido como:* `{lastUser}`.",
  "lastFmStatusFor": "{lastfmUser} *{nowPlaying} ouvindo{playCount}*:\n\n{trackName} por {artistName}",
  "lastFmPlayCount": " pela {plays}ª vez",
  "lastFmErr": "*Erro ao recuperar dados para o usuário do Last.fm* {lastfmUser}.\n\n`{err}`",
  "currentCommit": "*Commit atual:* `{commitHash}`",
  "errorRetrievingCommit": "*Erro ao obter o commit:*\n\n`{error}`",
  "provideLocation": "*Por favor, forneça uma localização.*",
  "invalidLocation": "*Localização inválida. Tente novamente.*",
  "weatherStatus": "*Clima em {addressFirst}:*\n\n*Estado:* `{getStatusEmoji(iconCode)} {wxPhraseLong}`\n*Temperatura:* `{temperature} °{temperatureUnit}`\n*Sensação térmica:* `{temperatureFeelsLike} °{temperatureUnit2}`\n*Umidade:* `{relativeHumidity}%`\n*Velocidade do vento:* `{windSpeed} {speedUnit}`",
  "weatherErr": "*Ocorreu um erro ao obter o clima. Tente novamente mais tarde.*\n\n`{error}`",
  "mainCommands": "Comandos principais",
  "mainCommandsDesc": "*Comandos principais*\n\n- /help: Exibe a ajuda do bot\n- /start: Inicia o bot\n- /privacy: Leia a política de privacidade do bot",
  "usefulCommands": "Comandos úteis",
  "usefulCommandsDesc": "*Comandos úteis*\n\n- /chatinfo: Envia informações sobre o grupo\n- /userinfo: Envia informações sobre você\n- /d | /device `<modelo>`: Pesquisa um dispositivo no GSMArena e mostra suas especificações.\n- /weather | /clima `<cidade>`: Veja o status do clima para uma localização específica\n- /modarchive | /tma `<id do módulo>`: Baixa um módulo do The Mod Archive.\n- /wiki `<página da wiki>` (WIP): Exibe conteúdo de uma página da Wikipedia, convertendo algumas coisas para um formato mais familiar no Telegram.\n- /http `<código HTTP>`: Envia detalhes sobre um código HTTP específico. Exemplo: `/http 404`",
  "funnyCommands": "Comandos engraçados",
  "funnyCommandsDesc": "*Comandos engraçados*\n\n- /gay: Verifique se você é gay\n- /furry: Verifique se você é furry\n- /random: Escolhe um número aleatório entre 0-10",
  "interactiveEmojis": "Emojis interativos",
  "interactiveEmojisDesc": "*Emojis interativos*\n\n- /dice: Jogue um dado\n- /idice: Role infinitamente um dado colorido\n- /slot: Tente combinar as figuras!\n- /ball: Tente chutar a bola no gol!\n- /bowling: Tente derrubar os pinos!\n- /dart: Tente acertar o alvo!",
  "ytDlp": "Download de vídeos",
  "ytDlpDesc": "*Download de vídeos*\n\n- /yt | /ytdl | /sdl | /dl | /video `<link do vídeo>`: Baixa um vídeo de algumas plataformas (ex: YouTube, Instagram, Facebook, etc.).\n\nConsulte [este link](https://github.com/yt-dlp/yt-dlp/blob/master/supportedsites.md) para obter mais informações e saber quais serviços são compatíveis.\n\n*Nota: O Telegram está atualmente limitando os uploads de bots a 50MB, o que significa que se o vídeo que você deseja baixar for maior que 50MB, a qualidade será reduzida para tentar carregá-lo de qualquer maneira. Estamos fazendo o possível para contornar ou corrigir esse problema.*",
  "lastFm": "Last.fm",
  "lastFmDesc": "*Last.fm*\n\n- /lt | /lmu | /last | /lfm: Mostra a última música do seu perfil no Last.fm + o número de reproduções.\n- /setuser `<usuário>`: Define o usuário para o comando acima.",
  "animalCommands": "Animais",
  "animalCommandsDesc": "*Animais*\n\n- /soggy `<1 | 2 | 3 | 4 | orig | thumb | sticker | alt>`: Envia o [meme do gato encharcado](https://knowyourmeme.com/memes/soggy-cat)\n- /cat `<tags>` - Envia uma foto aleatória de um gato. Você pode especificar algumas tags em inglês, separando cada uma por uma vírgula. Exemplo: `/cat orange, cute`\n- /dog - Envia uma imagem aleatória de um cachorro.\n- /httpcat `<código http>`: Envia memes de gato do http.cat com o código HTTP especificado. Exemplo: `/httpcat 404`",
  "myLittlePony": "My Little Pony",
  "myLittlePonyDesc": "*My Little Pony*\n\n- /mlp: Exibe esta mensagem de ajuda.\n- /mlpchar `<nome do personagem>`: Mostra informações específicas sobre um personagem de My Little Pony em inglês. Exemplo: `/mlpchar twilight`\n- /mlpep: Mostra informações específicas sobre um episódio de My Little Pony em inglês. Exemplo: `/mlpep 136`",
  "goBack": "Voltar",
  "maInvalidModule": "Por favor, forneça um ID de módulo válido do The Mod Archive.\nExemplo: `/modarchive 81574`",
  "maDownloadError": "Erro ao baixar o arquivo. Verifique o ID do módulo e tente novamente.",
  "ytDownloading": "*Baixando vídeo...*",
  "ytCheckingSize": "Verificando se o vídeo excede o limite de 50 MB...",
  "ytLibNotFound": "*Parece que o executável do yt-dlp não existe no nosso servidor...\n\nNesse caso, o problema está no nosso lado! Aguarde até que tenhamos notado e resolvido o problema.*",
  "ytUploading": "*Enviando vídeo...*",
  "ytUploadDesc": "{userMention}*, aqui está o seu vídeo baixado.*",
  "ytDownloadErr": "*Erro durante o download do vídeo do YT:*\n\n`{err}`",
  "ytUploadLimit": "*Este vídeo excede o limite de carregamento de 50 MB imposto pelo Telegram ao nosso bot. Por favor, tente outro vídeo. Estamos fazendo o possível para aumentar esse limite.*",
  "ytUploadLimit2": "*Esse vídeo teve a qualidade reduzida por estar excedendo o limite de 50MB para uploads imposto pelo Telegram.*",
  "ytNoLink": "*Por favor, forneça um link de um vídeo para download.*",
  "ytFileError": "Erro ao enviar o arquivo. Tente novamente mais tarde.",
  "botUpdated": "Bot atualizado com sucesso.\n\n```{result}```",
  "errorUpdatingBot": "Erro ao atualizar o bot\n\n{error}",
  "catImgErr": "Desculpe, mas não consegui obter a foto do gato que você queria.",
  "catGifErr": "Desculpe, mas não consegui obter o GIF do gato que você queria.",
  "quoteResult": "Aqui está uma citação aleatória pra você (em inglês):",
  "quoteErr": "Desculpe, mas algo deu errado ao exibir a citação.",
  "dogImgErr": "Desculpe, mas não consegui obter a foto do cacbhorro que você queria.",
  "httpCodeInvalid": "Por favor, insira um código HTTP válido.",
  "httpCodeErr": "Ocorreu um erro ao buscar o código HTTP.",
  "httpCodeNotFound": "Código HTTP não encontrado.",
  "httpCodeResult": "*Código HTTP*: `{code}`\n*Nome*: `{message}`\n*Descrição*: `{description}`",
  "ponyApiCharRes": "*Informações do Personagem de MLP para* `{input}`*:*\n\n*Nome:* `{name}`\n*Apelido:* `{alias}`\n*URL do Fandom:* [{url}]({url})\n*Sexo:* `{sex}`\n*Residência:* `{residence}`\n*Ocupação:* `{occupation}`\n*Tipo:* `{kind}`",
  "ponyApiEpRes": "*Informações do Episódio de MLP para* `{input}`*:*\n\n*Nome:* `{name}`\n*URL do Fandom:* [{url}]({url})\n*Temporada:* `{season}`\n*Episódio:* `{episode}`\n*Episódio Geral:* `{overall}`\n*Data de Lançamento:* `{airdate}`\n*História por:* `{storyby}`\n*Escrito por:* `{writtenby}`\n*Storyboard:* `{storyboard}`",
  "ponyApiNoCharName": "Por favor, forneça o nome do personagem.",
  "ponyApiNoCharFound": "Nenhum personagem encontrado.",
  "ponyApiNoEpisodeNum": "Por favor, forneça o número do episódio.",
  "ponyApiNoEpisodeFound": "Nenhum episódio encontrado.",
  "ponyApiNoComicName": "Por favor, forneça o nome da comic.",
  "ponyApiNoComicFound": "Nenhuma comic foi encontrada.",
  "ponyApiErr": "Ocorreu um erro ao buscar dados da API."
}
